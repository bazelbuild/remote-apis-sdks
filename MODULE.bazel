module(
    name = "bazel_remote_apis_sdks",
    version = "",
)

bazel_dep(name = "grpc", version = "1.66.0.bcr.2")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "protobuf", version = "28.1")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.38.0")

# Depending on remote-apis requires a commit override until automatic releasing to bcr is configured.
# Repo name needs to match what gazelle is expecting to ensure that this gets used instead of redownloading the go module.
# A Debug message will occur at build time complaining about mismatched versions, this will be resolved when remote-apis is released to bcr.
bazel_dep(
    name = "bazel_remote_apis",
    version = "",
    repo_name = "com_github_bazelbuild_remote_apis",
)
git_override(
    module_name = "bazel_remote_apis",
    commit = "6777112ef7defa6705b1ebd2831d6c7efeb12ba2",
    remote = "https://github.com/bazelbuild/remote-apis.git",
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_golang_glog",
    "com_github_google_go_cmp",
    "com_github_google_uuid",
    "com_github_klauspost_compress",
    "com_github_pkg_xattr",
    "org_golang_google_api",
    "org_golang_google_genproto",
    "org_golang_google_genproto_googleapis_bytestream",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_oauth2",
    "org_golang_x_sync",
)
